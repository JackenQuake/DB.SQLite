1. Покажите информацию по потокам. В отчет выведите номер потока, название курса и дату начала занятий.
SELECT streams.number AS stream_number, courses.name AS course_name, started_at
  FROM streams JOIN courses ON courses.id = streams.course_id;

2. Найдите общее количество учеников для каждого курса. В отчёт выведите название курса и количество учеников по всем потокам курса.
SELECT courses.name AS course_name, SUM(students_amount) AS total_students
  FROM streams JOIN courses ON courses.id = streams.course_id
  GROUP BY streams.course_id;

3. Для всех учителей найдите среднюю оценку по всем проведённым потокам. В отчёт выведите идентификатор, фамилию и имя учителя, среднюю оценку по всем проведенным потокам. Важно чтобы учителя, у которых не было потоков, также попали в выборку.
SELECT teachers.id, surname, name, AVG(performance)
  FROM teachers LEFT JOIN grades ON teachers.id = grades.teacher_id
  GROUP BY grades.teacher_id;

4. Дополнительное задание. Для каждого преподавателя выведите имя, фамилию, минимальное значение успеваемости по всем потокам преподавателя, название курса, который соответствует потоку с минимальным значением успеваемости, максимальное значение успеваемости по всем потокам преподавателя, название курса, соответствующий потоку с максимальным значением успеваемости, дату начала следующего потока.
SELECT
    name,
    surname,
    min_performance,
    (SELECT courses.name FROM courses
       JOIN streams ON courses.id = streams.course_id
       JOIN grades ON streams.id = grades.stream_id
       WHERE grades.teacher_id = this_teacher_id AND grades.performance = min_performance
    ) AS course_min_performance,
    max_performance,
    (SELECT courses.name FROM courses
       JOIN streams ON courses.id = streams.course_id
       JOIN grades ON streams.id = grades.stream_id
       WHERE grades.teacher_id = this_teacher_id AND grades.performance = max_performance
    ) AS course_max_performance,
    (SELECT streams.started_at FROM streams
       JOIN grades ON streams.id = grades.stream_id
       WHERE grades.teacher_id = this_teacher_id AND streams.started_at > DATE('now')
       ORDER BY streams.started_at ASC LIMIT 1
    ) AS next_stream_date
  FROM (   
    SELECT
      teacher_id AS this_teacher_id,
      name,
      surname,
      MIN(performance) AS min_performance,
      MAX(performance) AS max_performance
      FROM teachers JOIN grades ON teachers.id = grades.teacher_id
      GROUP BY grades.teacher_id
  );

Я использовал вложенные запросы - в методичке было сказано, что можно. При этом пришлось сделать так - сначала сделать таблицу с минимальной и максимальной успеваемостью, а потом сделать еще один SELECT уже из нее, добавив остальные нужны поля через подзапросы. И я добавил в эту вспомогательную таблицу this_teacher_id, который в ответ не включается, но используется для фильтрации в подзапросах, чтобы все извлекаемые данные относились к данному преподавателю.

А в качестве "даты начала следующего потока" я вывожу дату самого раннего потока для данного преподавателя после текущей даты DATE('now').
